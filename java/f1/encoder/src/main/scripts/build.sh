cd `dirname $0`;APPDIR=`pwd`;cd -
for i in $*; do

  echo "#### WORKING ON $i ####"
  cd $i;
  PROJDIR=`pwd`
  PROJNAME=`basename $PROJDIR`
  COMPANY=`dirname $PROJDIR | xargs -0 basename`
  PREFIX=3forge.$COMPANY.$PROJNAME.`date +%Y%m%d`
  SOURCEJARS=`mvn dependency:build-classpath | grep -v '^.INFO.' | sed 's/:/ /g'`
  cd $APPDIR
  rm -rf tmp
  mkdir -p tmp/src tmp/class tmp/api tmp/libs tmp/final tmp/tmp tmp/class2
  for jar in $SOURCEJARS; do
    if [[ $jar == */com/f1/* ]];then
      srcjar=`echo $jar | sed 's/.jar$/-sources.jar/'`
      echo "-- working on $jar --"
      if [ ! -f $srcjar ];then echo "missing src jar file: $srcjar";exit 1;fi
      if [ ! -f $jar ];then echo "missing class jar file: $jar";exit 1;fi
      cd tmp/src/;jar -xf $srcjar;cd $APPDIR
      cd tmp/class/;jar -xf $jar;cd $APPDIR
    else
      cp $jar tmp/libs
    fi
  done
  jar=$PROJDIR/target/${PROJNAME}-1.00-SNAPSHOT.jar
  if [ ! -f $jar ];then echo "missing project class jar file: $jar";exit 1;fi
  srcjar=$PROJDIR/target/${PROJNAME}-1.00-SNAPSHOT-sources.jar
  if [ ! -f $srcjar ];then echo "missing project src jar file: $srcjar";exit 1;fi

  cd tmp/src/;jar -xf $srcjar;cd $APPDIR
  cd tmp/tmp/;jar -xf $srcjar;cd $APPDIR


  FINALDIR=$APPDIR/tmp/final/$PREFIX
  mkdir $FINALDIR

  echo "-- building javadoc --"
  $JAVA_HOME/bin/javadoc -quiet -sourcepath $APPDIR/tmp/src -d $APPDIR/tmp/api -subpackages com.f1 2> /dev/null



  README=$FINALDIR/readme.txt
 
  echo "generated by 3forge on `date`" >> $README
  echo >> $README
  echo >> $README

  mkdir $FINALDIR/src/
  mkdir $FINALDIR/lib/

  cp $jar $FINALDIR/lib/$PREFIX.jar
  echo "lib/$PREFIX.jar    <-- class files specific for this executable" >> $README

  if [ "$COMPANY" != "3forge" ];then
    echo "-- INCLUDING SOURCE --"
    cd tmp/tmp;zip -q -r $FINALDIR/src/$PREFIX.src.zip .;cd $APPDIR
    echo "src/$PREFIX.src.zip    <-- source code specific for this executable" >> $README
  fi

  cp -r tmp/libs $FINALDIR/lib/3rdparty
  echo "lib/3rdparty/*    <-- libraries provided by 3rd party vendors required for this executable" >> $README

  cp -r $PROJDIR/src/main/scripts $FINALDIR/

  echo "lib/scripts/*    <-- scripts required for this executable" >> $README
  if [ -f $FINALDIR/lib/scripts/start.sh ] ;then echo "lib/scripts/*    <-- **** STARTS APPLICAIONT ****" >> $README;fi

  cp -r $PROJDIR/src/main/config $FINALDIR/
  if [ -d $FINALDIR/lib/config/ ];then echo "lib/config/*    <-- configuration used by this executable" >> $README;fi


  echo "--obfuscating $FINALDIR/lib/$PREFIX.f1libs.jar --"
  cd $APPDIR/tmp/class;jar -cf $APPDIR/tmp/jar.jar .;cd $APPDIR

  $JAVA_HOME/bin/java -jar $HOME/Downloads/proguard4.7/lib/proguard.jar -include $APPDIR/keep.cfg  -injars $APPDIR/tmp/jar.jar -outjars $APPDIR/tmp/jar2.jar  -libraryjars $FINALDIR/lib/3rdparty:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/jre/lib 1> /dev/null

  cd $APPDIR/tmp/class2;jar -xf $APPDIR/tmp/jar2.jar;cd $APPDIR
  $APPDIR/encoder/scripts/buildAuth.sh ${COMPANY}_${PROJNAME} $APPDIR/tmp/class2/com/f1/bootstrap/f1bootstrap.resources
  for cl in `cat encoded.cfg`; do
    if [ -f  $APPDIR/tmp/class2/${cl}.class ];then 
      echo "encoding $APPDIR/tmp/class2/${cl}.class"
      $APPDIR/encoder/scripts/encode.sh $APPDIR/tmp/class2/${cl}.class
    fi
  done

  cd $APPDIR/tmp/class2;jar -cf $FINALDIR/lib/$PREFIX.f1libs.jar .;cd $APPDIR
  echo "lib/$PREFIX.f1libs.jar    <-- files provided by 3forge's f1 project required by this executable" >> $README


  cd $APPDIR/tmp/api;zip -q -r $FINALDIR/src/$PREFIX.javadoc.zip .;cd $APPDIR
  echo "src/$PREFIX.javadoc.zip    <-- files provided by 3forge's f1 project required by this executable" >> $README

  echo "-- packaging $APPDIR/$PREFIX.tar.gz --"
  cd tmp/final;tar -czf $APPDIR/$PREFIX.tar.gz $PREFIX;cd $APPDIR
done

