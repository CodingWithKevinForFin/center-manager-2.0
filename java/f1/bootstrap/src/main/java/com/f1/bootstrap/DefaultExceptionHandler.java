package com.f1.bootstrap;import java.io.PrintStream;import java.lang.Thread.UncaughtExceptionHandler;import java.util.logging.Logger;import com.f1.utils.EH;import com.f1.utils.LH;import com.f1.utils.SH;public class DefaultExceptionHandler implements UncaughtExceptionHandler {	private PrintStream err = System.err;	private Thread mainThread;	private int exitStatus;	@Override	public void uncaughtException(Thread thread, Throwable e) {		final String message = "**** " + getClass().getSimpleName() + ": UNHANDLED EXCEPTION IN THREAD " + thread + " ****";		log(message, e);		if (Thread.currentThread() == mainThread) {			log("Main thread threw unhandled exception. Calling System.Exit(" + exitStatus + ")", null);			EH.systemExit(exitStatus);		}	}	private void log(String text, Throwable e) {		try {			Logger log = Logger.getLogger(DefaultExceptionHandler.class.getName());			if (e == null)				LH.severe(log, text);			else				LH.severe(log, text, e);		} catch (Throwable t) {			try {				t.printStackTrace(err);			} catch (Exception t2) {			}		}		try {			err.println(text + SH.NEWLINE + (e == null ? "" : SH.printStackTrace(" ", "> ", e, new StringBuilder()).toString()));		} catch (Throwable t) {			try {				t.printStackTrace(err);			} catch (Exception t2) {			}		}	}	public void setExitOnMainThread(Thread mainThread, int exitStatus) {		this.mainThread = mainThread;		this.exitStatus = exitStatus;	}}