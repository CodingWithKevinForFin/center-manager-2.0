package com.f1.fix2ami;

import java.util.Map;

import com.f1.base.Message;
import com.f1.base.PID;
import com.f1.base.VID;
import com.f1.fix2ami.processor.AbstractAmiPublishField;
import com.f1.fix2ami.processor.AbstractFix2AmiProcessor.MSG_PROCESS_STATUS;
import com.f1.pofo.fix.MsgType;

@VID("F2A.FXEV")
public interface Fix2AmiEvent extends Message {

	@PID(1)
	String getClOrdID();
	void setClOrdID(String clOrdId);

	@PID(2)
	MsgType getMsgType();
	void setMsgType(MsgType msgType);

	@PID(3)
	String getPartitionId();
	void setPartitionId(String partitionId);

	@PID(4)
	quickfix.Message getFIXMessage();
	void setFIXMessage(quickfix.Message message);

	// AmiOrderMsg and AmiExecMsg are generated by the message processor like NewOrderProcessor, ExecutionReportProcessor...
	@PID(5)
	Map<String, AbstractAmiPublishField> getAmiOrderMsg();
	void setAmiOrderMsg(Map<String, AbstractAmiPublishField> amiOrderMsg);

	@PID(6)
	Map<String, AbstractAmiPublishField> getAmiExecMsg();
	void setAmiExecMsg(Map<String, AbstractAmiPublishField> amiExecMsg);

	@PID(7)
	String getOrigClOrdID();
	void setOrigClOrdID(String origClOrdID);

	@PID(8)
	String getOrderStatusChain();
	void setOrderStatusChain(String orderStatusChain);

	@PID(9)
	String getTradeStatusChain();
	void setTradeStatusChain(String tradeStatusChain);

	@PID(10)
	MSG_PROCESS_STATUS getMsgProcessStatus();
	void setMsgProcessStatus(MSG_PROCESS_STATUS code);

}
