rh._.exports({"0":[["Panel"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n","\n"],["\n","\n","\n"],["\n","Panel"," var = .... ;","\n","\n"],["\nA visualization Panel. There are various subtypes including HtmlPanels, FormPanels, TablePanels, etc","\n","\n"],["\n","\n","\n","getLocation","\n","Close this panel","\n","\n","\n","callCommand","\n","Call the given command. Returns commandUid on success, otherwise null","\n","\n","\n","callCommand","\n","Call the given command. Returns null","\n","\n","\n","callRelationship","\n","Rerun the relationship targeting this panel based on name. Returns true on success","\n","\n","\n","getType","\n","Return the type of this panel, either: html, div_v, div_h, tabs, or one of the AMI visualization types.","\n","\n","\n","callRelationshipId","\n","Rerun the relationship targeting this panel based on id. Returns true on success","\n","\n","\n","exportConfig","\n","export this panels configuration","\n","\n","\n","clearUserSelection","\n","Clear the user's selection","\n","\n","\n","close","\n","Close this panel","\n","\n","\n","deletePanel","\n","permanently remove this panel","\n","\n","\n","minimize","\n","Minimize the window","\n","\n","\n","getParent","\n","get the Panel owning this panel","\n","\n","\n","bringToFront","\n","Make this panel visible and bring its containing window to the front","\n","\n","\n","getTitle","\n","Return this panel's title","\n","\n","\n","addPanelNextToMe","\n","Add a new panel adjacent to this panel by createing a divider portlet. The divider portlet is returned","\n","\n","\n","getWindow","\n","Close this panel","\n","\n","\n","getId","\n","Return this panel's panel ID","\n","\n","\n","getStyle","\n","Get the value associated with the supplied style key in this portlets style as a string. Null if key not found","\n","\n","\n","getStyle","\n","Get the value associated with the supplied style key in this portlets style as a string. Null if key not found","\n","\n","\n","getCurrentRelationship","\n","Get the relationship currently applied to this panel","\n","\n","\n","getStyleNumber","\n","Get the numeric value associated with the supplied style key in this portlets style. Null if key not found, or value is not a number","\n","\n","\n","getValue","\n","Return value associated with key from this portlet's attributes. Returns null if key does not exist","\n","\n","\n","setValue","\n","Add the key value pair to this portlet's attributes and return true if successful","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Rectangle Panel::getLocation()","\n","\n"],["\nClose this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::callCommand(String applicationId, String cmdId, Map arguments)","\n","\n"],["\nCall the given command. Returns commandUid on success, otherwise null","\n","\n"],["\n","\n","\n","String applicationId","\n","\n","\n","\n","String cmdId","\n","\n","\n","\n","Map arguments","\n","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::callCommand(String applicationId, String cmdId, String arguments)","\n","\n"],["\nCall the given command. Returns null","\n","\n"],["\n","\n","\n","String applicationId","\n","\n","\n","\n","String cmdId","\n","\n","\n","\n","String arguments","\n","comma delimited list of key=value arguments","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","boolean Panel::callRelationship(String relationshipName)","\n","\n"],["\nRerun the relationship targeting this panel based on name. Returns true on success","\n","\n"],["\n","\n","\n","String relationshipName","\n","name of Relationship","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::getType()","\n","\n"],["\nReturn the type of this panel, either: html, div_v, div_h, tabs, or one of the AMI visualization types.","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","boolean Panel::callRelationshipId(String relationshipId)","\n","\n"],["\nRerun the relationship targeting this panel based on id. Returns true on success","\n","\n"],["\n","\n","\n","String relationshipId","\n","Id of Relationship","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Map Panel::exportConfig()","\n","\n"],["\nexport this panels configuration","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Panel::clearUserSelection()","\n","\n"],["\nClear the user's selection","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::close()","\n","\n"],["\nClose this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Panel Panel::deletePanel()","\n","\n"],["\npermanently remove this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::minimize()","\n","\n"],["\nMinimize the window","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Panel Panel::getParent()","\n","\n"],["\nget the Panel owning this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::bringToFront()","\n","\n"],["\nMake this panel visible and bring its containing window to the front","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::getTitle()","\n","\n"],["\nReturn this panel's title","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Panel Panel::addPanelNextToMe(String position, Map configuration)","\n","\n"],["\nAdd a new panel adjacent to this panel by createing a divider portlet. The divider portlet is returned","\n","\n"],["\n","\n","\n","String position","\n","Must be either:LEFT,ABOVE,RIGHT,BELOW","\n","\n","\n","Map configuration","\n","if null a blank portet is created","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Window Panel::getWindow()","\n","\n"],["\nClose this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::getId()","\n","\n"],["\nReturn this panel's panel ID","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::getStyle(String styleKey)","\n","\n"],["\nGet the value associated with the supplied style key in this portlets style as a string. Null if key not found","\n","\n"],["\n","\n","\n","String styleKey","\n","the key associated with this portlets style","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Panel::getStyle(String styleKey, number index)","\n","\n"],["\nGet the value associated with the supplied style key in this portlets style as a string. Null if key not found","\n","\n"],["\n","\n","\n","String styleKey","\n","the key associated with this portlets style","\n","\n","\n","number index","\n","If the style is a list, which element in the list to return","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Relationship Panel::getCurrentRelationship()","\n","\n"],["\nGet the relationship currently applied to this panel","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","number Panel::getStyleNumber(String styleKey)","\n","\n"],["\nGet the numeric value associated with the supplied style key in this portlets style. Null if key not found, or value is not a number","\n","\n"],["\n","\n","\n","String styleKey","\n","the key associated with this portlets style","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Panel::getValue(String key)","\n","\n"],["\nReturn value associated with key from this portlet's attributes. Returns null if key does not exist","\n","\n"],["\n","\n","\n","String key","\n","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","boolean Panel::setValue(String key, Object value)","\n","\n"],["\nAdd the key value pair to this portlet's attributes and return true if successful","\n","\n"],["\n","\n","\n","String key","\n","\n","\n","\n","Object value","\n","\n","\n","\n","\n","\n","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Panel Class Overview"]],"3":[["getLocation()"],["callCommand(applicationId,cmdId,arguments)"],["callCommand(applicationId,cmdId,arguments)"],["callRelationship(relationshipName)"],["getType()"],["callRelationshipId(relationshipId)"],["exportConfig()"],["clearUserSelection()"],["close()"],["deletePanel()"],["minimize()"],["getParent()"],["bringToFront()"],["getTitle()"],["addPanelNextToMe(position,configuration)"],["getWindow()"],["getId()"],["getStyle(styleKey)"],["getStyle(styleKey,index)"],["getCurrentRelationship()"],["getStyleNumber(styleKey)"],["getValue(key)"],["setValue(key,value)"]],"4":[["Definition"],["Description"],["Method Definitions"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"]],"id":"87"})