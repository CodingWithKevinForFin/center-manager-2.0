rh._.exports({"0":[["Flow Control"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n","Complex \n AMI scripts can be achieved by combining multiple ","statements"," into \n ","statement blocks."," A statement block is wrapped in curly brackets \n {...} and each statement is separated with a semi-colon;. Then, the execution \n of ","statement blocks"," can be determined using a variety of flow control \n statements including ","if, if/else, for, while,"," and ","for-each-loops."," \n Note that for and while loops can use the ","continue"," and ","break"," \n directives as well.","\n"," ","\n","Examples","\n","{","\n","  Integer count = 10;","\n","  Integer value = 1;","\n","  for(Integer i = 0; \n i < count; i++){","\n","    value *= \n 2;","\n","  }","\n","  if(value < 2000) \n {","\n","    session.alert(value);"," \n ","//alert shows 1024","\n"," "," ","} else"," "," "," ","\n","    session.alert(\"High \n value\");"," ","// this \n is never hit. Also note: single statements don't need to","\n                                    be \n in {...} statement blocks","\n","  while(true){","\n","    value -= \n 10;","\n","    if(value \n < 1000)","\n","      break;","\n","  }","\n"," "," ","//value is now 994"," ","\n","}","\n"," ","\n"," ","\n"],["\n","{"," \n ","statement"," ","[",";","statement"," \n ...","] [",";","]","}","\n","** Evaluates to return value if a return_statment exists, \n otherwise it evaluates to the last statement's evaluation. If no statements, \n evaluates to Void","\n"," ","\n"," ","\n"],["\n","for(","initialization;termination_expression",";","increment",")"," ","statement","\n","initialization"," -"," statement \n that is called first, used to declare variables with local scope","\n","termination_expression"," -"," \n statement that must evaluate to boolean, false terminates","\n","increment"," -"," statement \n called after each completion of the loop's statements","\n","statement"," -"," called once \n per loop. Note:","\n               * \n ","continue_statement"," will exit the statement and proceed to increment \n statement","\n","               * \n ","break_statement"," will exit the for loop entirely","\n","** Evaluates to Void","\n"," ","\n"," ","\n"],["\n","for(","type_expr"," \n "," ","varname",":","iterable_or_array",")"," ","statement","\n","iterable_or_array"," -"," \n values to iterate over in order","\n","statement"," -"," called once \n per value. Note:","\n               * \n ","continue_statement"," will exit the statement and proceed to next \n value","\n","               * \n ","break_statement"," will exit the for loop entirely","\n","** Evaluates to Void","\n"," ","\n"," ","\n"],["\n","while(","bool_expression",")"," ","statement","\n","same as for(;bool_expression;) statement","\n","** Evaluates to Void","\n"," ","\n","                  ","\n"],["\n","if(","bool_expression",")"," ","statement","\n","if ","bool_expression"," evaluates to true then execute \n ","statement"," ","\n"," ","\n","** Evaluates to Void","\n"," ","\n"," ","\n"],["\n","if(","bool_expression",")"," ","statement"," \n ","else"," ","statement2","\n","if ","bool_expression"," evaluates to true then execute \n ","statement"," otherwise execute","statement2"," ","\n"," ","\n","** Evaluates to Void","\n"," ","\n"," ","\n"],["\n","return"," \n ","statement","                    ","\n","** Evaluates to statement's value. Will cause call stack \n to be popped out to caller function.","\n"," ","\n"," ","\n"],["\n","break"," ","\n","** See for_loop, for_each_loop and while_loop","\n"," ","\n"," ","\n"],["\n","continue"," ","\n","** See for_loop, for_each_loop and while_loop","\n"," ","\n"," ","\n"],["\n","function","(","param","[",", param"," ...","]",")"," ","\n","** Evaluates to ","return_type"," value","\n"," ","\n"," ","\n"],["\n","target_object.function","(","param","[",", \n param"," ...","]",")"," ","\n","** Evaluates to ","return_type"," \n value","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Flow Control"]],"3":[["statement \n block"],["for \n loop"],["for \n each loop"],["while \n loop"],["if \n statement"],["if \n else statement"],["return \n statement"],["break \n statement"],["continue statement"],["function \n call"," "],["member method call"]],"id":"63"})