rh._.exports({"0":[["AMI SQL and Standard SQL Differences"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n","For those familiar with standard SQL, these \n are the differences:","\n"," ","\n","1. Equality is done with ==","\n","  AMISQL: SELECT * FROM Users \n WHERE userid == 15;","\n","  ","MYSQL: \n SELECT * FROM Users WHERE userid = 15;","\n"," ","\n","2. Checking for null is done with equality, \n ex: == null","\n","  AMISQL: SELECT * FROM Users \n WHERE status == null;","\n"," "," ","MYSQL: SELECT * FROM Users WHERE status \n IS NULL;","\n"," ","\n","3. Strings are surrounded in double quotes","\n","  AMISQL: SELECT * FROM Users \n WHERE name == \"David\";","\n","  ","MYSQL: \n SELECT * FROM Users WHERE name = \"David\";","\n"," ","\n","4. ","\"Matches\" \n (~~) instead of LIKE","\n","  ","AMISQL: \n SELECT * FROM Users WHERE name ~~ \"^Dav\";","\n","  ","MYSQL: \n SELECT * FROM Users WHERE name LIKE \"Dav%\";","\n"," ","\n","    (See"," \n ","Simplified \n Text Matching"," ","for pattern matching \n rules/expressions)","\n"," ","\n","5. Boolean expressions && works same \n as AND.  || works same as OR","\n","  AMISQL: SELECT * FROM Users \n WHERE userid == 15 AND status == null && name == \"David\";","\n"," "," ","MYSQL: SELECT * FROM Users WHERE userid \n = 15 AND status IS NULL && name = \"David\";","\n"," ","\n","6. By default all tables are TEMPORARY, use \n the PUBLIC key word to make non-temporary tables:","\n","  AMISQL: CREATE TABLE MyTemporaryTable(id \n String);","\n","  ","AMISQL: \n CREATE PUBLIC TABLE MyPermanantTable(id String);","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["AMI SQL and Standard SQL Differences"]],"id":"172"})