<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "4.1.0_2";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="OriginalFile" content="3Forge Ami Script.docx"/>
<meta name="generator" content="Adobe RoboHelp 2020"/>
<title>Overview</title>
<link rel="StyleSheet" href="../assets/css/AMI_Documentation_Style.css" type="text/css"/>
<style type="text/css">/*<![CDATA[*/
A:visited {
	color: #800080;
}
A:link {
	color: #0000ff;
}
/*]]>*/</style>
</head>

<body class="topicbody">
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Overview">
        <span>Overview</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <div>
    <div class="deprecation-container" style="display: flex; justify-content: center; align-items: center; background: #FFCC00; height: 60px;">
      <div class="message" style="color: #000000; font-size: 20px"><span class="warning-sign">⚠</span> This page has been deprecated. Please visit <a class="new-doc-link" href="https://docs.3forge.com" target="_blank">New 3forge Documentation</a> for updated content.</div>
    </div>
  </div>
  <div>
<h1><span style="font-size: 24pt; font-family: Arial, sans-serif;">Overview</span><span style="font-size: 14.0pt;">    </span></h1>
<p style="margin-bottom: 0pt; line-height: Normal; font-family: Arial, sans-serif;"><b><span style="font-size: 14pt; font-weight: normal;">AMI</span></b><span style="font-size: 15pt;"> </span>has an embedded, versatile language 
 which is a combination of the well-known <i>C/Java style</i>, <i>SQL</i> 
 and <i>String Templating</i> languages.  Here is a very quick 
 example of the incredible versatility of the language which does a cross-database 
 join:</p>
<p style="font-family: Arial, sans-serif; margin-bottom: 0pt; font-size: 11pt;"> </p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 line-height: Normal; font-size: 12pt;"><span courier="">{</span></p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><i><span courier="">  //Inspect the ACCOUNTS 
 table of two pre-defined databases (qadb &amp; proddb).</span></i></p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><i><span courier="">  //Two temporary 
 in-memory tables are created (qatemp and prtemp)</span></i></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  </span><span courier="" style="color: #006dbf;">String table = &quot;ACCOUNTS&quot;;</span></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  CREATE TABLE qatemp 
 AS USE datasource=qadb   EXECUTE SELECT * FROM ${table};</span></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  CREATE TABLE prtemp 
 AS USE datasource=proddb EXECUTE SELECT * FROM ${table};</span></p>
<p style="margin-bottom: .0001pt; text-indent: .5in; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 11pt;"> </p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 11pt;"><i><span courier="">  </span><span courier="" style="font-style: normal; font-size: 12pt;">//Gather some statistics, 
 Note that the results of the queries on the in-memory tables are</span></i></p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt; font-style: normal;"><i><span courier="" style="font-style: normal;">  //stuffed 
 into the local variables</span></i></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  int qaCnt = select 
 count(*) from qatemp;</span></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  int prCnt = select 
 count(*) from prtemp;</span></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  int bothCnt = select 
 count(*) from qatemp, prtemp where qatemp.id == prtemp.id;</span></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"> </p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier=""> </span> <i><span courier="" style="color: #808080; font-style: normal;">//Alert the user with 
 some statistics, including the number of users in both qa and prod</span></i></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  </span><span courier="" style="color: #006dbf;">session.alert(&quot;Found ${qaCnt + prCnt} 
 ${table} rows: ${qaCnt} in qa and ${prCnt} in prod. \</span></p>
<p style="margin-bottom: .0001pt; color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">                 There 
 are ${bothCnt} ids existing in both&quot;);</span></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">                </span></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt; font-style: normal;"><i style="font-style: normal;"><span courier="" style="font-style: normal;">  </span><span courier="" style="color: #808080; font-style: normal;">//Create a Temporary ProdOnly 
 table that contains all users in prod but not qa.</span></i></p>
<p style="margin-bottom: .0001pt; color: #808080; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt; font-style: normal;"><i><span courier="" style="font-style: normal;">  //This 
 table can be used in the visualization layer</span></i></p>
<p style="margin-bottom: .0001pt; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;"><span courier="">  </span><span courier="" style="color: #006dbf;">Create table ProdOnly as select * from prtemp 
 where !(id in (select id from qatemp));</span></p>
<p style="margin-bottom: .0001pt; font-size: 8.0pt; font-family: ;"><span courier="" style="color: #006dbf; font-family: &#39;Courier New&#39;, monospace; 
	 font-size: 12pt;">}</span><span courier="">            </span></p>
<p style="margin-bottom: .0001pt; font-family: Arial, sans-serif;"> </p>
<p>In this introductory language you can see the interoperability of SQL 
 and a procedural style language. The ${...} syntax is used for easily 
 creating dynamic strings and SQL statements.</p>


</div><div>
    <p> </p>
  </div>

</body></html>