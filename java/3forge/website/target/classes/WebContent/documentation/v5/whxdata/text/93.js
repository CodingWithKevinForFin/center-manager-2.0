rh._.exports({"0":[["Table"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n","\n"],["\n","\n","\n"],["\n","Table"," var = .... ;","\n","\n"],["\nRepresents a 2-dimensional data structure with a predefined set of uniquely named, ordered columns. It also has a variant number of rows (see Row).","\n","\n"],["\n","\n","\n","<Constructor>","\n","Create a new table","\n","\n","\n","<Constructor>","\n","Create a new table","\n","\n","\n","getColumnNameAt","\n","Return name of column, or null if the supplied index is outside of the column count","\n","\n","\n","iterator","\n","Returns an iterator of Row objects","\n","\n","\n","addColumn","\n","Returns null","\n","\n","\n","getRow","\n","Returns the row at the zero indexed location, or null","\n","\n","\n","addRow","\n","Return value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n","\n","getColumnLocation","\n","Return 0 indexed column position, or -1 if column does not exist in the table","\n","\n","\n","getColumnType","\n","Return type of column, or null","\n","\n","\n","removeColumn","\n","Return true if the table changed as a result","\n","\n","\n","insertRow","\n","Return value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n","\n","toString","\n","Return a string representing this table","\n","\n","\n","toList","\n","Return a list of values for a particular column, or null if the column does not exist. Empty tables will return an empty list","\n","\n","\n","getTitle","\n","Returns the title of this table, or null if no title","\n","\n","\n","query","\n","Run amisql on this table. Use 'this' to reference this table in the amisql. Returns the resulting table.","\n","\n","\n","getColumnsCount","\n","Returns the number of columns in this table","\n","\n","\n","setTitle","\n","Set the title of this table","\n","\n","\n","getRowsCount","\n","Returns the number of rows in this table","\n","\n","\n","getRows","\n","Return a list of the rows","\n","\n","\n","getRows","\n","Return a list of the rows","\n","\n","\n","removeRow","\n","Return value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n","\n","getValue","\n","Return value associated with the given key and value. Returns null if column does not exist or row number is out of bounds","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Table table = new Table(String title)","\n","\n"],["\nCreate a new table","\n","\n"],["\n","\n","\n","String title","\n","title name","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Table table = new Table(String title, Map map_of_lists)","\n","\n"],["\nCreate a new table","\n","\n"],["\n","\n","\n","String title","\n","title name","\n","\n","\n","Map map_of_lists","\n","Map of lists where key will be the column name and value is a list of values, all lists must be same length","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::getColumnNameAt(Integer columnPos)","\n","\n"],["\nReturn name of column, or null if the supplied index is outside of the column count","\n","\n"],["\n","\n","\n","Integer columnPos","\n","zero column position","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Iterator Table::iterator()","\n","\n"],["\nReturns an iterator of Row objects","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::addColumn(String columnName, String columnType, Object DefaultValue)","\n","\n"],["\nReturns null","\n","\n"],["\n","\n","\n","String columnName","\n","\n","\n","\n","String columnType","\n","\n","\n","\n","Object DefaultValue","\n","default value for existing columns or null","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Row Table::getRow(Integer rowNum)","\n","\n"],["\nReturns the row at the zero indexed location, or null","\n","\n"],["\n","\n","\n","Integer rowNum","\n","zero indexed row number, negative to start at end","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::addRow(Object ... params)","\n","\n"],["\nReturn value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n"],["\n","\n","\n","Object ... params","\n","list of params","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::getColumnLocation(String columnName)","\n","\n"],["\nReturn 0 indexed column position, or -1 if column does not exist in the table","\n","\n"],["\n","\n","\n","String columnName","\n","column name","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::getColumnType(String columnName)","\n","\n"],["\nReturn type of column, or null","\n","\n"],["\n","\n","\n","String columnName","\n","name of the column to get the type for","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","boolean Table::removeColumn(String columnName)","\n","\n"],["\nReturn true if the table changed as a result","\n","\n"],["\n","\n","\n","String columnName","\n","name of column to remove","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::insertRow(Integer rowPosition, Object ... params)","\n","\n"],["\nReturn value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n"],["\n","\n","\n","Integer rowPosition","\n","0 index row position","\n","\n","\n","Object ... params","\n","list of params","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Table::toString(String rowDelim, String colDelim, String ... options)","\n","\n"],["\nReturn a string representing this table","\n","\n"],["\n","\n","\n","String rowDelim","\n","delimiter to seperate rows, default is line return","\n","\n","\n","String colDelim","\n","delimiter to seperate values, default is comma","\n","\n","\n","String ... options","\n","any combination of: INCLUDE_HEADER, INCLUDE_TYPES, INCLUDE_TITLE, SKIP_ROWS","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","List Table::toList(String columnName)","\n","\n"],["\nReturn a list of values for a particular column, or null if the column does not exist. Empty tables will return an empty list","\n","\n"],["\n","\n","\n","String columnName","\n","name of column to get values for","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","String Table::getTitle()","\n","\n"],["\nReturns the title of this table, or null if no title","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Table Table::query(String amiSql)","\n","\n"],["\nRun amisql on this table. Use 'this' to reference this table in the amisql. Returns the resulting table.","\n","\n"],["\n","\n","\n","String amiSql","\n","amiSql to run","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Integer Table::getColumnsCount()","\n","\n"],["\nReturns the number of columns in this table","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::setTitle(String titleName)","\n","\n"],["\nSet the title of this table","\n","\n"],["\n","\n","\n","String titleName","\n","new title name","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Integer Table::getRowsCount()","\n","\n"],["\nReturns the number of rows in this table","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","List Table::getRows()","\n","\n"],["\nReturn a list of the rows","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","List Table::getRows()","\n","\n"],["\nReturn a list of the rows","\n","\n"],["\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::removeRow(Integer rowPosition)","\n","\n"],["\nReturn value associated with key from this sessions global properties. Returns null if key does not exect","\n","\n"],["\n","\n","\n","Integer rowPosition","\n","0 index row position","\n","\n","\n","\n","\n","\n","\n"],["\n","\n","\n","\n"],["\n","Object Table::getValue(Integer rowNum, String columnName)","\n","\n"],["\nReturn value associated with the given key and value. Returns null if column does not exist or row number is out of bounds","\n","\n"],["\n","\n","\n","Integer rowNum","\n","zero indexed row number","\n","\n","\n","String columnName","\n","name of column","\n","\n","\n","\n","\n","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Table Class Overview"]],"3":[["constructor(title)"],["constructor(title,map_of_lists)"],["getColumnNameAt(columnPos)"],["iterator()"],["addColumn(columnName,columnType,DefaultValue)"],["getRow(rowNum)"],["addRow(params)"],["getColumnLocation(columnName)"],["getColumnType(columnName)"],["removeColumn(columnName)"],["insertRow(rowPosition,params)"],["toString(rowDelim,colDelim,options)"],["toList(columnName)"],["getTitle()"],["query(amiSql)"],["getColumnsCount()"],["setTitle(titleName)"],["getRowsCount()"],["getRows()"],["getRows()"],["removeRow(rowPosition)"],["getValue(rowNum,columnName)"]],"4":[["Definition"],["Description"],["Method Definitions"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"],["Definition"],["Description"],["Parameter Definition"]],"id":"93"})