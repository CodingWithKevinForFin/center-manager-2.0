rh._.exports({"0":[["Custom Persistence Factory (Ami One, Ami Center)"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n"],["\n","AMI's in-memory database is a comprehensive \n and realtime SQL storage engine that can be extended using Java Plugins.  The \n persistence plugin is a factory used to create table persister instances \n as defined in the imdb schema.","\n"," ","\n"," ","\n"],["\n","Consider the Ami Script example:","\n"," ","\n","CREATE \n TABLE mytable(col1 int) USE PersistEngine=\"","MyPersister","\" \n PersistOptions=\"","myoption=some_val","\"","\n"," ","\n","The above sample command will cause \n AMI to:","\n"," ","\n","\n\t","Create \n\t a table (named \"mytable\") with the specified columns (col1)","\n\t","Look \n\t for a registered AmiTablePersisterFactory with the id \"MyPersister\". ","\n\t","Call \n\t newPersister()  on the factory, passing in a map of supplied \n\t options (","myoption=some_val",")","\n\t","Call \n\t init(...) on the returned, newly generated persister. "," ","\n","\n"," ","\n"," ","\n"],["\n","com.f1.ami.center.table.persist.AmiTablePersisterFactory","\n"," ","\n"," ","\n"],["\n","ami.db.persister.plugins=","comma_delimited_list_of_fully_qualified_java_class_names"," ","\n"," ","\n"," ","\n"],["\n","package \n ","com.demo",";","\n"," ","\n","import"," \n java.util.Collection;","\n","import"," \n java.util.Collections;","\n","import"," \n java.util.Map;","\n"," ","\n","import"," \n ","com.f1.ami.amicommon.AmiFactoryOption",";","\n","import"," \n com.f1.container.ContainerTools;","\n","import"," \n com.f1.utils.PropertyController;","\n"," ","\n","public"," \n ","class"," \n ","TestPersisterFactory"," ","implements"," \n ","AmiTablePersisterFactory"," {","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","init(ContainerTools"," \n ","tools",", PropertyController"," \n ","props",")"," {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","AmiTablePersister"," \n ","newPersister(Map<String, Object>"," ","options",")"," \n {","\n","               "," ","return"," ","new"," ","TestPersister","();","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," String \n ","getPluginId()"," {","\n","               "," ","return"," ","\"TESTPERSISTER\"",";","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," Collection<","AmiFactoryOption","> \n ","getAllowedOptions()"," {","\n","               "," ","return"," ","Collections.","EMPTY_LIST",";","\n","       "," }","\n"," ","\n","}","\n"," ","\n","package"," \n ","com.demo",";","\n"," ","\n","import"," \n java.io.IOException;","\n"," ","\n","import"," \n com.f1.ami.center.AmiSysCommandsUtils;","\n","import"," \n com.f1.ami.center.table.AmiImdbImpl;","\n","import"," \n com.f1.ami.center.table.AmiRowImpl;","\n","import"," \n com.f1.ami.center.table.AmiTable;","\n","import"," \n com.f1.utils.LH;","\n"," ","\n","public"," \n ","class"," \n ","TestPersister"," ","implements"," \n ","AmiTablePersister"," {","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","init(AmiTable"," \n ","sink",")"," {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","onRemoveRow(AmiRowImpl"," \n ","row",")"," {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","onAddRow(AmiRowImpl"," \n ","r",")"," {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","onRowUpdated(AmiRowImpl"," \n ","sink",","," ","long"," ","updatedColumns",")"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","loadTableFromPersist()"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","saveTableToPersist()"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","clear()"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","flushChanges()"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","drop()"," \n {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","       "," ","@Override","\n","       "," ","public"," ","void"," ","onTableRename(String"," \n ","oldName",", String"," ","name",")"," {","\n","               "," ","//"," ","TODO","Auto-generated method stub","\n","               "," \n ","\n","       "," }","\n"," ","\n","}","\n"," ","\n"," ","\n"],["\n","ami.db.persister.plugins=com.demo.TestPersisterFactory"," \n \n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Custom Persistence Factory (AMI One, AMI Center)"]],"3":[["Overview"],["Example"],["Java interface (see javadoc for details) "," "],["Property name"],["Example - Java Code"],["Example - Configuration"]],"id":"268"})