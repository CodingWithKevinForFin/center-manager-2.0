rh._.exports({"0":[["Goals"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n","String templating \n is used to ease the dynamic creation of strings.  Some key places \n that benefit from string templating:","\n","\n\t","HTML \n\t generation","\n\t","SQL \n\t generation","\n\t","Content-rich \n\t messages for the end user","\n\t","Debugging \n\t / Logging","\n","\n"," ","\n"," ","\n"],["\n","As \n usual, strings are denoted using double quotes at the beginning and end, \n ex: \"...\".  Within a string, ${...} is recognized \n as a special operator.  The text between the curly braces is \n interpreted as code to be executed.  For example, the code can \n be a simple variable name, or a complex set of expressions.","\n"," ","\n","  "," ","\"text${code}text${code}...\"","   ","\n","If \n you wish to include a literal dollar sign followed by a curly bracket, \n the dollar sign must be escaped with a backslash. ","\n"," ","\n","   ","\"test\\${stilltext}text\"     "," ","//Evaluates \n to: test${stilltext}text"," ","\n","To \n prevent against SQL (and other forms) of injections, ${...} wrapped with \n quotes ('), double quotes (\") or back ticks (`) will cause the evaluated \n text to be escaped with a backslash (\\) accordingly:","\n"," ","\n","\"text '${code}'\"    - \n results of code will have ' escaped to \\'","\n","\"text \\\"${code}\\\"\"  - \n results of code will have \" escaped to \\\"","\n","\"text `${code}`\"    - \n results of code will have ` escaped to \\`","\n"," ","\n","For \n example:","\n","String foo = \"Eric's\";","\n","String \n bar = \"NAME LIKE '${foo}'\";"," \n ","//result is: ","NAME \n LIKE 'Eric\\'s'"," ","\n"," ","\n","Finally, \n null will evaluate to an empty string (\"\")."," ","\n"," ","\n","Examples","\n"," ","\n","Integer age = 20;","\n","String name = \"Sue\";","\n","String message2 \n = \"${name} is ${age} year(s) old\";    "," ","// Simple Case: ","Sue \n is 20 year(s) old","\n","String t = \"Four \n times four is ${4 * 4}\";             "," ","// Complex Expression: ","Four \n times four is 16","\n","String t2 = \"40/9 \n is ${formatNumber(40/9d, \"#.###\")}\";"," ","// Calling functions: ","40/9 \n is 4.444","\n","String t2 = \"don't \n replace \\${name}\";                 "," ","// Avoid Template: ","don't \n replace ${name}","\n"," ","\n","String d = \"ain't\";                 ","\n","String m1 = \"escaping \n '${d}' easy\";                   "," ","// \n Evaluates to: ","escaping \n 'ain\\'t' easy"," "," ","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Goals"]],"3":[["Basic \n Usage"]],"id":"66"})