rh._.exports({"0":[["AMI-SQL Glossary of Nested Expressions"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n"," ","\n","alter_col_expr","\n","MODIFY"," ","colname"," ","AS"," ","newname"," ","type_expr","|","ADD"," ","newname"," \n ","type_expr"," \n ","[","BEFORE"," ","beforecol","]","|","DROP"," ","colname","|","RENAME"," ","colname"," ","TO"," ","newname","\n","colname"," \n -"," String name of the column to alter","\n","newname"," \n -"," String name of the column to create","\n","b","eforecol"," ","-"," \n String name of the existing column to add the new column before","\n"," ","\n","column_expr","\n","expr"," \n ","[","AS"," \n ","colname","]|[tablename.]","*"," [","EXCEPT"," (","colname \n [,colname,...]",")","]","\n","colname"," \n -"," name of the column that will contain results of \n expression","\n","* - expands \n to available columns for all tables or specified table","\n"," ","\n","expr","\n","See \n \"","Standard \n Operators","\" section",".","\n"," ","\n","forloop_expr","\n","FOR"," \n ","varname"," ","="," ","start_const"," ","TO"," \n ","end_const"," ","[","STEP"," ","step","]","\n","varname"," \n -"," variable that can be referenced by expresions within \n the for loop","\n","start_const"," \n -"," initial value of varname, inclusive","\n","end_const"," \n -"," last number to loop over, inclusive unless the step \n would cause it to be skipped.","\n","step"," \n -"," positive number dictating size to increment or decrement \n varname by in each loop cycle.","\nA negative or zero step will cause an error. If start_const <= end_const \n then step is used to increment, otherwise decrement.","\n","\n","in_expr","\n","When only \n a ","single"," column will participate in the \n in clause:"," ","\n","expr"," \n ","IN"," "," ","(","select_clause",")","                           ","(select must return a single column)","\n","expr"," \n ","IN"," "," ","values_expr","                              "," ","(each entry must be a single value)"," \n "," "," ","\n"," ","\n","When ","two or more columns"," will participate in \n the in clause:"," ","\n","(","expr",",","[",",","expr2"," ","...","]",")"," \n ","[","NOT","]"," ","IN"," ","(","select_clause",")","             "," ","(select \n must return same number of columns)","\n","(","expr",",","[",",","expr2"," ","...","]",")"," \n ","[","NOT","]"," ","IN"," ","(","values_expr","[",",","values_expr","...","]",")"," ","(values_expr entry count must match \n expr count)","\n"," ","\n","The IN clause evaluates \n to true for a given row if the result of expr from the left hand expression \n exists in the right hand expression.  If using multiple columns, \n the combination of the expr must match the combination of the values_expr \n or select_clause for a given row.","\n"," ","\n","lambda_expr","\n","{","statements","}"," ","[","AS"," ","colname","]","\n","The lambda expression \n allows for contained AMI Script to be executed once per row returned by \n the containing select statement.","\n","colname"," \n ","is the name of the column that the return value of this \n lambda will be placed in.","\n"," ","\n","nested_select_expr","\n","(","select_clause",")"," ","[","AS"," ","aliasname","]","\n","Select_clause"," -"," inner \n query to execute","\n","aliasname"," -"," name \n of alias for use in ","column_expr"," and \n expr","\n"," ","\n","table_expr","\n","tlbname"," \n ","[","AS"," \n ","aliasname","]","\n","tblname"," \n -"," name of table to include in select","\n","aliasname"," \n -"," name of alias for use in ","column_expr"," \n and expr","\n"," ","\n","type_expr","\n","LONG","|","INT","|","CHAR|BYTE|SHORT|DOUBLE|FLOAT|UTC|UTCN|BOOLEAN|STRING","\n","\n","\n","values_expr","\n","(","val"," \n ","[",",","val2","...","]",")","\n"," ","\n","where_expr","\n","expr","|","in_expr"," \n ","[","AND","|","OR"," ","where_expr","]","\n","Expressions with \n the added IN clause (in_expr) funtionality ","\n"," ","\n","window_expr","\n","WINDOW"," \n ","window_name"," ","ON"," ","windowing_expr"," \n ","[","ORDER \n BY"," ","order_expr","]"," "," ","[","PARTITION"," \n BY"," ","partitioning_expr","]"," ","\n","window_name"," \n -"," The name of this window which is used in the preceding \n col_expr (in the analyze clause). For example, if the name of a window \n is \"dates\" then max(dates.open) would give you the max value \n of the open column for that window."," ","\n"," ","\n","windowing_expr"," \n -"," The boolean expression that defines (for each row) \n the other rows that belong to the same window.","\n"," ","\n","order_expr"," \n -"," Optional expression which determines the natural \n order of rows for the window.  This is important for order dependent \n aggregates such as first(...) and last(...)","\n"," ","\n","partitioning_expr"," \n -"," Optional expression which deterines how the table \n is broken up before windowing is considered. In other words, two rows \n that evaluate to a different partitioning_expr will never belong to the \n same window.","\n"," ","\n"," ","\n"," ","\n"," ","\n","prep_expr","\n","stack","(expr)"," "," ","running sum of expr from first \n to row n, inclusive","\n","count","(expr)"," "," ","running count where expr!=null \n to the current row, inclusive","\n","norm","(expr)","  "," ","similar to stack, but scaled so \n that the max value is one. Short hand for:","\n","  stack(expr)/sum(expr). \n See dnorm(...)","\n","\n","dnorm","(expr)"," "," ","similar to stack, but scaled so \n that the min value is zero. Short hand for:","\n","  (stack(expr) - expr)/sum(expr). This, in conjunction \n with norm(...) can used for preparing area charts   ","\n","  that should fill an area, such as a pie chart.","\n","\n","rank","(expr)"," "," "," ","will \n evaluate expr for all rows and the lowest value will get 1, 2","nd"," \n will get 2,","\n","  etc. If multiple rows expr evaluate to the \n same value, they will get the same    ranking.","\n","\n","urank","(expr)"," "," ","will evaluate expr for all rows \n and the lowest value will get 1, 2","nd"," \n will get 2,","\n","  etc. If multiple rows expr evaluate to the \n same value, the first occurrence gets the lower value.","\n","\n","unique","(expr)"," ","each unique evaluation of expr will return \n a unique integer, starting at 1. Repeat","\n","  occurrences of expr \n will return the same integer value.","\n","                                               ","\n","offset","(expr,offset)"," ","Will grab the value offset from \n the current row. If offset==0 use current","\n","                    row, \n negative number is nth prior row, positive number is nth future row.","\n","                    Evaluates \n to null if offset is out of bounds for current table.","\n","                    Ex: \n offset(price,-1) for first row returns null, for second row returns first","\n","                    Row's \n price and for nth row returns (n-1)ths row's price"," ","\n"," ","\n","kmeansCluster","(expr1,expr2,...,nClusters,seed)"," \n ","Clusters data using the k-means \n clustering algorithm. Takes one or more expressions, followed by int nClusters \n specifying the number of clusters and long seed specifying the random \n seed for initializing the model parameters. The seed argument may be set \n to null if no specific seed is desired. Returns a column of integers labeling \n each record according to its learned cluster. Input expressions must evaluate \n to numbers.","\n"," ","\n","emGmmCluster","(expr1,expr2,...,nClusters,seed)"," \n ","Same functionality as kmeansCluster(), \n but instead uses the expectation-maximization algorithm to train a Gaussian \n mixture model."," "," ","\n"," ","\n","viGmmCluster","(expr1,expr2,...,nClusters,seed)"," \n ","Same functionality as kmeansCluster(), \n but instead uses the variational inference algorithm to train a Gaussian \n mixture model."," ","\n"," ","\n"," ","\n","agg_expr","\n","sum","(expr)","   "," ","              ","Summation of all values, skips \n nulls","\n","min","(expr)","                 "," ","Minimum value, skips nulls","\n","max","(expr)","                 "," ","Maximum value, skips nulls","\n","count","(expr)","               "," ","Count of non-null values","\n","countUnique","(expr)","      ","    ","Count of unique non-null values","                  ","\n","cat","(expr, delim, limit)"," \n    ","Concats \n the first limit non-null values to a string using delim","\n","avg","(expr)","                 "," ","Average of all non-null values","\n","var","(expr)","                 "," ","Population Variance of all non-null \n values","\n","varS","(expr)","                "," ","Sample Variance of all non-null \n values","\n","stdev","(expr)","               "," ","Population Standard Deviation of \n all non-null values","\n","stdevS","(expr)","              "," ","Sample Standard Deviation of all \n non-null values","\n","first","(expr)","               "," ","First value, may be null if first \n value is null","\n","last","(expr)","                 ","Last value, may be null if last \n value is null","\n","covar","(expr1, expr2)","       "," ","Population"," \n "," ","Covariance of 1st expr and 2nd \n expr where both aren't null.","\n","covarS","(expr1, expr2)","      "," ","Sample"," \n "," ","Covariance of 1st expr and 2nd \n expr where both aren't null.","\n","cor","(expr1, expr2)","         "," ","Correlation"," of 1st expr and 2nd expr where \n both aren't null. Returns 0 - 1","\n","beta","(expr1, expr2)","        "," ","Beta of 1st expr and 2nd expr where \n both are not null. The beta function","\n","                           is \n defined as beta(x, y) = covar(x, y) / var(y). If stdev(y) = 0, the ","\n","                           ","expression returns NaN."," \n ","\n","avgExp","(expr, decay, desc)","  ","The exponentially weighted \n average of non-null values with a specified decay","\n","                           rate. \n Desc of true/false means first/last row are highest weighted.","\n","avgGauss","(expr, variance)","   ","The Gaussian weighted \n average of non-null values, such that the middle value","\n","                           has \n highest weight.","\n","median","(expr)             ","  ","The median of all non-null \n values.","\n","percentileCont","(expr)       ","Returns the value at the \n percentile provided. Is interpolated and might not be equal to any value \n within the supplied dataset","\n","percentileDisc","(expr)       ","Returns the value nearest \n to the percentile provided","\n"," ","\n\n\n","\n    "," ","\n  ","\n\n"]],"3":[["AMI-SQL \n Glossary of Nested Expressions"," "]],"id":"183"})