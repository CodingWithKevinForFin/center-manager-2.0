rh._.exports({"0":[["Custom Relay Feed Handler"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n"],["\n","The \n Feed Handler Plugin allows for the very efficient processing incoming \n streams of data to be transmitted into the AMI Center using AMI's proprietary \n protocol.  Generally one feed handler will be written per type \n of messaging bus.","\n"," ","\n"],["\n","Setting \n up properties in the relay to instantiate a feed handler. In this example, \n the feed handler will have the name my_feedhandler_name:","\n"," ","\n","ami.relay.fh.active=$${ami.relay.fh.active},","my_feedhandler_name","\n","ami.relay.fh.","my","_","feedhandler","_","name",".start=true","\n","ami.relay.fh.","my","_","feedhandler","_","name",".class=","class.that.extends.com.f1.ami.relay.AmiFHBase","\n","ami.relay.fh.","my","_","feedhandler","_","name",".props.","my_custom_property","=","my_cutom_value","\n"," ","\n"],["\n","You \n will implement this interface, only this interface in most cases.  Please \n note that an AmiRelayIn will be passed to the init function, and this \n is used to send messages into AMI.","\n"," ","\n","package"," ","com.f1.ami.relay.fh;","\n"," ","\n","import"," ","com.f1.ami.relay.AmiRelayIn;","\n","import"," ","com.f1.ami.relay.AmiRelayOut;","\n","import"," ","com.f1.utils.PropertyController;","\n"," ","\n","//Represents \n a single instance of an AMI Relay Feed Handler","\n","public"," ","interface"," ","AmiFH"," ","extends"," ","AmiRelayOut \n {","\n"," ","\n","      "," ","public"," ","static"," ","int"," ","STATUS_STARTED"," ","= \n 1;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_STOPPED"," ","= \n 2;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_FAILED"," ","= \n 3;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_STARTING"," ","= \n 4;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_STOPPING"," ","= \n 5;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_START_FAILED"," ","= \n 6;","\n","      "," ","public"," ","static"," ","int"," ","STATUS_STOP_FAILED"," ","= \n 7;","\n"," ","\n","      "," ","public"," ","static"," ","final"," ","String"," ","PCE_STATUS_CHANGED"," ","="," ","\"STATUS_CHANGED\"",";","\n"," ","\n","      "," ","//called \n during AMI startup","\n","      "," ","//  id \n - unique id per relay/runtime","\n","      "," ","//  name \n - name of the relay, ex: my_feedhandler_name","\n","      "," ","//  sysProps \n - all properties inside ami relay","\n","       ","//  props \n - properties specified to this feed handler","\n","       ","//  endpoint \n - the endpoint for sending messages into AMI. You should hold onto this \n and call methods on it as messages stream in, etc.","\n","      "," ","public"," ","void"," ","init(","int"," ","id, \n String name, PropertyController sysProps, PropertyController props, AmiRelayIn \n endpoint);","\n"," ","\n","      "," ","//called \n when this feedhandler is started/stopped. Typically, start is called \n immediately after all successful init has been called","\n","      "," ","public"," ","void"," ","start();","\n","      "," ","public"," ","void"," ","stop();","\n"," ","\n","       ","//Return \n the status of this feedhandler (see constants) the string version is for \n the convenience of users to see why the current status is what it is.","\n","      "," ","public"," ","int"," ","getStatus();","\n","      "," ","public"," ","String \n getStatusReason();","\n"," ","\n","      "," ","//the \n AppId (aka loginId) associated with this connection. See Reserved Columns, \n column P for details)","\n","      "," ","public"," ","String \n getAppId();","\n"," ","\n","       ","//time \n and place and description of the connection, not required but convenient \n for end users diagnosing connections","\n","      "," ","public"," ","long"," ","getConnectionTime();","\n","      "," ","public"," ","int"," ","getRemotePort();"," ","//ex: \n 1234","\n","      "," ","public"," ","String \n getRemoteIp();"," ","//ex:  myhost","\n","      "," ","public"," ","String \n getDescription();","//ex: someprotocol://myhost:1234","\n"," ","\n","       ","//when durability is enabled this \n will be called back when the message has been successfully persisted (see \n ami.relay.guaranteed.messaging.enabled)","\n","       ","public"," ","void"," onAck(","long"," seqnum);","\n"," ","\n","       ","//E (execute command) See real-time \n messaging api for details. Note that implementation is optional. If there \n was an unexpected error, write the details to errorSink. The server is \n for advanced internal use","\n","       ","public"," ","void"," ","call(AmiRelayServer \n server, AmiRelayRunAmiCommandRequest action, StringBuilder errorSink)",";","\n","}","\n"," ","\n"],["\n","This \n is implemented by AMI and is how a feed handler (AmiFH) instance actually \n communicates with AMI. For example, if a feed handler wants to insert \n a new row into AMI, it could call the onObject(...) method. Each AmiRelay \n will be assigned its own personal AmiRelayIn","\n"," ","\n"," ","\n","package"," ","com.f1.ami.relay;","\n"," ","\n","import"," ","java.util.Set;","\n","import"," ","java.util.concurrent.ThreadFactory;","\n"," ","\n","import"," ","com.f1.ami.relay.fh.AmiFH;","\n","import"," ","com.f1.ami.relay.plugins.AmiRelayInvokablePlugin;","\n","import"," ","com.f1.container.ContainerTools;","\n"," ","\n","//Please \n note, it's assumed the user is very familiar with the AMI Real-time Messaging \n API","\n","//","\n","//For \n the encodedMap(s) parameters:","\n","//","\n","//  (A) \n you can use the com.f1.ami.relay.AmiRelayMapToBytesConverter::toBytes(...) \n method to conveniently convert a map of"," ","params"," ","to \n the expected byte protocol.","\n","//  (B) \n you can implement the following protocol directly, see protocol at bottom \n of interface definition","\n"," ","\n","public"," ","interface"," ","AmiRelayIn \n {","\n"," ","\n","      "," ","public"," ","static"," ","int"," ","RESPONSE_STATUS_OK"," ","= \n 0;","\n","      "," ","public"," ","static"," ","int"," ","RESPONSE_STATUS_NOT_FOUND"," ","= \n 1;","\n","      "," ","public"," ","static"," ","int"," ","RESPONSE_STATUS_ERROR"," ","= \n 2;","\n"," ","\n","      "," ","//S \n (status) message","\n","      "," ","public"," ","void"," ","onStatus(","byte","[] \n encodedMap);","\n"," ","\n","      "," ","//R \n (response to execute command) message.","\n","      "," ","public"," ","void"," ","onResponse(String \n I_uniqueId,"," ","int"," ","S_status, \n String M_message, String X_executeAmiScript,"," ","byte","[][] \n encodedMaps);","\n"," ","\n","      "," ","//X \n (exit) message.  Clean=true means it was an expected exit, false \n is unexpected,"," ","ex"," ","line dropped","\n","      "," ","public"," ","void"," ","onLogout(","byte","[] \n encodedMap,"," ","boolean"," ","clean);","\n"," ","\n","      "," ","//L \n (login) message","\n","      "," ","public"," ","void"," ","onLogin(String \n O_options, String PL_plugin,"," ","byte","[] \n encodedMap);","\n"," ","\n","      "," ","//C \n (command definition) message","\n","      "," ","public"," ","void"," ","onCommandDef(String \n I_id, String N_name,"," ","int"," ","L_level, \n String W_whereRowLevel, String T_wherePanelLevel, String H_help, String \n A_formDefinition,","\n","                     String \n X_executeAmiScript,"," ","int"," ","P_priority, \n String E_enabled, String S_style, String M_multipleSelectMode, String \n F_fields,"," ","byte","[] \n encodedMap,"," ","int"," ","callbacksMask);","\n"," ","\n","      "," ","//O \n (object) message for batching. Set seqNum=-1 for no seqNum. All arrays \n should have same number of arguments.","\n","      "," ","public"," ","void"," ","onObjects(","long"," ","seqNum, \n String[] I_ids, String[] T_types,"," ","long"," ","E_expiresOn,"," ","byte","[][] \n encodedMaps);","\n"," ","\n","      "," ","//O \n (object) message. Set seqNum=-1 for no seqNum","\n","      "," ","public"," ","void"," ","onObject(","long"," ","seqNum, \n String I_id, String T_type,"," ","long"," ","E_expiresOn,"," ","byte","[] \n encodedMap);","\n"," ","\n","      "," ","//D \n (delete) message. All arrays should have same number of arguments.","\n","      "," ","public"," ","void"," ","onObjectDelete(","long"," ","origSeqnum, \n String[] I_ids, String T_type,"," ","byte","[][] \n encodedMaps);","\n"," ","\n","      "," ","//when \n the connection is established, this should be supplied.  The \n optional encoded map will show as parameters on this connection","\n","      "," ","public"," ","void"," ","onConnection(","byte","[] \n encodedMap);","\n"," ","\n","      "," ","//when \n the connection has an unexpected error, this should be supplied.  The \n optional encoded map will show as parameters on this connection.  error \n is user-readable a message","\n","      "," ","public"," ","void"," ","onError(","byte","[] \n encodedMap, CharSequence error);","\n"," ","\n","      "," ","//Tools \n for this AMI instance, internal use","\n","      "," ","public"," ","ContainerTools \n getTools();","\n"," ","\n","      "," ","//For \n creating additional thread","\n","       ","public"," ThreadFactory \n getThreadFactory();","\n"," ","\n","       ","//Advanced feature: To start another \n (typically sub) ","feed handler",".","\n","      "," ","public"," ","void"," ","initAndStartFH(AmiFH \n fh2, String string);","\n"," ","\n","      "," ","//Advanced \n feature: get invokable"," ","plugins"," ","(see \n ami.relay.invokables property)","\n","      "," ","public"," ","AmiRelayInvokablePlugin \n getInvokable(String typ);","\n","      "," ","public"," ","Set<String> \n getInvokableTypes();","\n","}","\n"," ","\n"," ","\n","//  EncodedMap \n Protocol:","\n","//","\n","//   TotalMessage:  <-- \n this is what should be passed in as encodedMaps","\n","//       KeyValuePairCount \n (signed short) <--number of entries in this map","\n","//       Key[]  <- \n back to back entry of all key names.  (see below)","\n","//       Value[] \n <- back to back entry of all values, note there is a different protocol \n depending on type","\n","//","\n","//   Key:","\n","//            StringLengthOfKey \n (signed byte)","\n","//     "," ","Ascii"," ","Representation \n of key's chars (byte array)","\n","//","\n","//   Value \n for"," ","Int"," ","between 0x80 ... 0x7f:","\n","//      0x0A \n value (byte)","\n","//","\n","//   Value \n for"," ","Int"," ","between  0x8000 \n ... 0x7fff:","\n","//      0x0B \n value (2 bytes)","\n","//","\n","//   Value \n for"," ","Int"," ","between  0x800000 \n ... 0x7fffff:","\n","//      0x0C \n value (3 bytes)","\n","//","\n","//   Value \n for"," ","Int"," ","between  0x80000000 \n ... 0x7fffffff:","\n","//      0x0D \n value (4 bytes)","\n","//","\n","//   Value \n for Long between 0x80 ... 0x7f:","\n","//      0x0E \n value (byte)","\n","//","\n","//   Value \n for Long between  0x8000 ... 0x7fff:","\n","//      0x0F \n value (2 bytes)","\n","//","\n","//   Value \n for Long between  0x800000 ... 0x7fffff:","\n","//      0x10 \n value (3 bytes)","\n","//","\n","//   Value \n for Long between  0x80000000 ... 0x7fffffff:","\n","//      0x11value \n (4 bytes)","\n","//     ","\n","//   Value \n for Long between  0x8000000000 ... 0x7fffffffff:","\n","//      0x12 \n value (5 bytes)","\n","//     ","\n","//   Value \n for Long between  0x800000000000 ... 0x7fffffffffff:","\n","//      0x13 \n value (6 bytes)","\n","//     ","\n","//   Value \n for Long between  0x80000000000000 ... 0x7fffffffffffff:","\n","//      0x14 \n value (7 bytes)","\n","//     ","\n","//   Value \n for Long between  0x8000000000000000 ... 0x7fffffffffffffff:","\n","//      0x15 \n value (8 bytes)","\n","//     ","\n","// \n   Value for Double:","\n","//      0x06 \n value (8 bytes) (see Double.doubleToLongBits)","\n","//     ","\n","//   Value \n for Float:","\n","//      0x05 \n value (4 bytes) (see Float.floatToIntBits)","\n","//     ","\n","//   Value \n for Character:","\n","//      0x1A \n value (2 bytes)","\n","//     ","\n","//   Value \n for Boolean True:","\n","//      0x02 \n 0x01","\n","//   Value \n for Boolean False:","\n","//      0x02 \n 0x00","\n","//     ","\n","//   Value \n for string <=127 chars in length and simple ASCII (all chars between \n 0 ... 127)","\n","//      0x09","\n","//      number_of_chars \n (byte)","\n","//      bytes \n of string (1 byte per char)","\n","//","\n","//   Value \n for string >127 chars in length and simple ASCII (all chars between \n 0 ... 127)","\n","//      0x08","\n","//      number_of_chars \n (","int",")","\n","//      bytes \n of string (1 byte per char)","\n","//     ","\n","//   Value \n for string with extended ASCII (at least one char not between 0 ... 127)","\n","//      0x07","\n","//      number_of_chars \n (","int",")","\n","//      chars \n of string (2 bytes per char)","\n","//     ","\n","//   Value \n for UTC","\n","//      0x1E","\n","//      milliseconds \n since epoch (6 bytes)","\n","//     ","\n","//   Value \n for NANO"," ","timestamp","\n","//      0x1F","\n","//      nanoseconds \n since epoch (8 bytes)","\n","//     ","\n","//   Value \n for binary data (","aka"," ","byte array)","\n","//      0x28","\n","//      number_of_bytes \n (4 bytes)","\n","//      bytes \n (1 byte per byte of raw data)","\n","/","/","\n","//   For \n example, The key/value pairs"," ","qty=50|sm=\"MSFT\""," ","should \n be converted into the following bytes for an encodedMap:","\n","//","\n","//   |--header--| \n |--------------------keys-----------------------| |----------------------values-----------------------|","\n","//   |          | \n |                                               | \n |                                                   |","\n","//  "," ","0x00, \n  0x02,  0x03,  0x71,  0x74,  0x79,  0x02, \n  0x73,  0x6D,  0x0A,  0x32,  0x09,  0x04, \n  0x4D,  0x53,  0x46,  0x54","\n","//   \\_________/ \n  \\_____/ \\________________/  \\_____/\\____________/ \\____/ \\____/ \n \\___/ \\____/  \\_______________________/","\n","//     Entries     key1 \n         key1            key2 \n       key2      val1  val1 \n   val2   val2            val2","\n","//                length \n     ASCII code        length   ASCII \n code   type  value  type  length        ASCII \n code","\n","//","\n","//       (2)       (3)         (qty)            (2)        (sm)      (int) \n (50)  (string) (4)           (MSFT)","\n","//                                                                    /|\\          /|\\      ","\n","//                                              +----------------------+------------+------------------------------+","\n","//                                              |     The \n 0x0A and 0x09 dictate how to interpret the following     |","\n","//                                              |     bytes, \n according to the value type definitions above         |","\n","//                                              +------------------------------------------------------------------+","\n"," ","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Custom Relay Feed Handler"]],"3":[["Overview"],["Properties"],["Feed \n Handler Interface"],["AmiRelayIn \n Interface"]],"id":"271"})