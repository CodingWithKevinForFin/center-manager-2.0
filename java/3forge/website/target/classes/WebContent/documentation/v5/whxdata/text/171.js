rh._.exports({"0":[["Goals"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n"," ","\n","The 3Forge \n SQL language provides a comprehensive instruction set for working with \n table(s) of data.","\n","\n\t","Retrieval"," \n\t - Accessing and Normalizing data from external sources","\n\t","Blending"," \n\t - Perform Joins and Unions on tables","\n\t","Modifying"," \n\t - Inserting, Updating, and Deleting rows","\n\t","Analyzing"," \n\t - Grouping, Sorting, and Filtering","\n\t","Schema \n\t Definition"," - Creating, Updating, and Dropping tables","\n","\n"," ","\n","Broadly speaking, \n the logic steps involved in data-visualization are:","\n","1.","      "," Running \n a query, or set of queries, on external datasources and/or the AMI-Realtime \n database.","\n","- Each datasource \n is predefined and uniquely named.","\n","- The results of \n queries on datasources will result in temporary, in-memory tables","\n","- The queries can \n be constructed using user-input/user-selected/user-associated data","\n","- In more advanced cases, the queries \n can be sequential, meaning the results from one query are then fed into \n a subsequent query (allowing for reactionary data blending)","\n","2.","      "," Blending \n the results from ","Step 1",", resulting in new temporary in-memory tables","\n","3.","      "," Building \n visualizations on the tables from ","Step 1"," and/or ","Step 2","\n"," ","\n"," ","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Goals"]],"id":"171"})