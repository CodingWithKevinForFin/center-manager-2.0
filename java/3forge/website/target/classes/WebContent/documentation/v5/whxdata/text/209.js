rh._.exports({"0":[["Realtime Indexes"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n"],["\n","\n"],["\n","This command allows you to dramatically speed \n up common queries. Without indexes, a ","SELECT"," ","... \n ","WHERE"," ","clause \n needs to scan and consider each row.  But if there is an index \n on the column referenced in the WHERE clause, then the query optimizer \n will use the index instead. The first column listed is the \"top\" \n level column indexed, and so on."," ","\n"," ","\n","There \n are three different methods supported for indexing:","\n"," ","\n","\n\t","HASH",": \n\t Under the hood this is a hashmap. This is the fastest most versatile \n\t indexing approach but is only useful for queries that directly use \n\t equality, because the data is stored in an unsorted fashion.","\n\t","SORT",": \n\t Under the hood this is a treemap. This has additional overhead to \n\t a HASH index for both inserting and querying but can be used with \n\t ordinality comparisons, such as less than, greater than as well as \n\t equals.","\n\t","SERIES",": \n\t Under the hood this is a sorted array. This is a special purpose and \n\t highly optimized index useful for when data will be inserted in ascending \n\t order, as entries can quickly be added to the end of the array, and \n\t queries (including ordinal searches) can use a binary lookup.  If \n\t data is order out of order the array is forced to do a memcopy which \n\t can be very expensive.","\n","\n"," ","\n","Constraints \n can be added to an index to determine the outcome of a key collision. \n Three different types of constraints are supported:","\n"," ","\n","\n\t","NONE",": \n\t If a constraint is not supplied, this is the default. There is no \n\t restriction on having multiple rows with the same key.","\n\t","UNIQUE",": An attempt to insert (or update) a \n\t row such that two rows in the table will have the same key will fail.","\n\t","P","RIMARY",": \n\t An attempt to insert a row with the same key as an existing row will \n\t cause the existing row to be updated instead of a new row being inserted \n\t (specifically, those cells specified and not participating in the \n\t index will be updated). This can be thought of as an \"UPSERT\" \n\t in other popular databases. An attempt to update a row such that two \n\t rows in the table will have the same key will fail. Each table can \n\t have at most one PRIMARY index.","\n","\n","                           ","\n","CREATE \n INDEX [IF NOT EXISTS]"," ","idx_name"," \n "," ","\n","      "," ","ON"," "," ","tbl_name","(","col_name"," \n "," ","[","HASH","|","SORT","|","SERIES","] [,","col_name"," \n "," ","[","HASH","|","SORT","|","SERIES","] ...])","\n","       [","USE"," \n "," ","CONSTRAINT","=\"[","NONE","|","UNIQUE","|","PRIMARY","]\"]","\n"," ","\n","idx_name"," -"," name of this index to create, each indexs name must be \n unique for the table","\n","tbl_name"," -"," name of the table to add the index to","\n","col_name"," -"," name of the column to put the index on.","\n"," ","\n"],["\n"," ","\n","This \n example will add an index to the MyTable's Account and Price column. Queries \n that use the Account column or the Account and Price column will be faster.  Note \n that queries using only the Price column will not sped up by this index. \n This is an ideal index if we know where going to be running queries of \n the form: select ... from MyIndex where Account==","somevalue"," \n and Price[ <, ==, > ] ","somevalue"," ","\n","                                ","\n","CREATE INDEX MyIndex \n ON MyTable(Account HASH, Price SORT)","\n"," ","\n","CREATE INDEX MyIndex \n ON MyTable(Name HASH) USE CONSTRAINT=\"PRIMARY\"","\n"," ","\n"," ","\n","drop_index \n clause","\n","\n"],["\n","Removes \n the specified index from the given table, as created by CREATE INDEX","\n"," ","\n","DROP \n INDEX"," ","[IF EXISTS] ","index_name"," "," ","ON"," "," tbl_name","\n"," ","\n"],["\n","                      ","\n","This example \n will drop the index named MyIndex from the MyTable table."," ","\n"," ","\n","Drop index MyIndex on MyTable","\n\n\n","\n    "," ","\n  ","\n\n"]],"3":[["Realtime \n Indexes"]],"4":[["create_index \n clause"]],"6":[["OVERVIEW"],["EXAMPLES"],["OVERVIEW"],["EXAMPLES"]],"id":"209"})