rh._.exports({"0":[["Directives for parsing Key Value Pairs"]],"1":[["\n  ","\n    ","\n      ","⚠"," This page has been deprecated. Please visit ","New 3forge Documentation"," for updated content.","\n    ","\n  ","\n  ","\n"],["\n","_cmd=","command_to_execute"," ","(","Required",", \n see general directives)"," ","\n","_fields=","col1_type \n col1_name, ..."," \n ","(","Required",", see general directives)"," ","\n","_delim=delim_string"," ","(","Required",")"," ","\n","_conflateDelim=true|false"," ","(Optional. \n Default is false)"," ","\n","_equals=single_equals_char"," ","(","Required",")","\n","_mappings=from1=to1,from2=to2,..."," ","(Optional)"," ","\n","_quote=single_quote_char"," ","(Optional)"," ","\n","_escape=single_escape_char"," ","(Optional)"," ","\n"," ","\n","The _","delim"," indicates the char \n (or chars) used to separate each field (If _","conflateDelim"," is true, \n then 1 or more consecutive delimiters are treated as a single delimiter). \n The _equals char is used to indicate the key/value separator. The _","fields"," \n is an ordered list of types and field names for each of the delimited \n fields. If the _","quote"," is supplied, then a field value starting \n with ","quote"," will be read until another ","q","uote"," \n char is found, meaning ","delim","s within ","quotes"," will not be \n treated as delims.  If the _","e","scape"," \n char is supplied then when an ","escape"," char is read, it is skipped \n and the following char is read as a literal.","\n"," ","\n","The optional _","ma","ppings"," \n directive allows you to map keys within the output to field names specified \n in the _","fields"," directive. This is useful when the output has key \n names that are not valid field names, or the output has multiple key names \n that should be used to populate the same column.","\n"," ","\n"],["\n","_delim=\"|\"","\n","_equals=\"=\"","\n","_fields=\"code,lname,int \n age\"","\n","_mappings=\"20=code,21=lname,22=age\"","\n","_quote=\"'\"","\n","_escape=\"\\\\\"","\n"," ","\n","This defines a pattern such that:","\n"," ","\n","code=11232-33|lname=Smith|age=20","\n","code='1332|ABC'|age=30","\n","20=Act\\|112|21=J|22=18 \n ","(Note: \n this row will work due to the _mappings directive)"," ","\n"," ","\n","Maps to: ","\n"," ","\n","\n\t","\n\t\t","code          ","\n\t\t","Lname","\n\t\t","age","\n\t","\n\t","\n\t\t","11232-33","\n\t\t","Smith","\n\t\t","20","\n\t","\n\t","\n\t\t","1332|ABC","\n\t\t"," ","\n\t\t","30","\n\t","\n\t","\n\t\t","Act|112","\n\t\t","J","\n\t\t","18","\n\t","\n","\n\n\n","\n    "," ","\n  ","\n\n"]],"2":[["Directives for parsing Key Value Pairs"]],"4":[["Examples"]],"id":"252"})